package cloud.catfish.mbg.plugin;

import org.mybatis.generator.api.IntrospectedColumn;
import org.mybatis.generator.api.IntrospectedTable;
import org.mybatis.generator.api.PluginAdapter;
import org.mybatis.generator.api.dom.java.Field;
import org.mybatis.generator.api.dom.java.FullyQualifiedJavaType;
import org.mybatis.generator.api.dom.java.Method;
import org.mybatis.generator.api.dom.java.TopLevelClass;

import java.util.List;

/**
 * Unified MyBatis Generator plugin for comprehensive domain model generation control.
 * 
 * <p>This plugin combines the functionality of three separate plugins:</p>
 * <ul>
 *   <li><strong>Date/Time Serialization:</strong> Adds @JsonFormat annotations for JSON serialization</li>
 *   <li><strong>Date/Time Deserialization:</strong> Adds @DateTimeFormat annotations for Spring MVC binding</li>
 *   <li><strong>Getter/Setter Control:</strong> Optionally disables getter/setter method generation</li>
 * </ul>
 * 
 * <p><strong>Features:</strong></p>
 * <ul>
 *   <li>Configurable JSON serialization format for date/time fields</li>
 *   <li>Configurable Spring MVC date/time binding format</li>
 *   <li>Optional getter/setter method generation control</li>
 *   <li>Flexible date/time pattern and timezone configuration</li>
 *   <li>Support for DATE, TIME, and TIMESTAMP database types</li>
 * </ul>
 * 
 * <p><strong>Configuration Properties:</strong></p>
 * <ul>
 *   <li><code>enableJsonFormat</code> - Enable @JsonFormat annotations (default: false)</li>
 *   <li><code>enableDateTimeFormat</code> - Enable @DateTimeFormat annotations (default: false)</li>
 *   <li><code>generateGetters</code> - Generate getter methods (default: true)</li>
 *   <li><code>generateSetters</code> - Generate setter methods (default: true)</li>
 *   <li><code>dateTimePattern</code> - Date/time pattern (default: "yyyy-MM-dd HH:mm:ss")</li>
 *   <li><code>timezone</code> - Timezone for JSON format (default: "GMT+8")</li>
 * </ul>
 * 
 * <p><strong>Note:</strong> Date/time format annotations are disabled by default since the VO generator plugin 
 * now handles these annotations automatically in generated VO classes.</p>
 * 
 * <p><strong>Usage Example:</strong></p>
 * <pre>
 * &lt;plugin type="cloud.catfish.mbg.plugin.DomainModelPlugin"&gt;
 *     &lt;property name="enableJsonFormat" value="false"/&gt;
 *     &lt;property name="enableDateTimeFormat" value="false"/&gt;
 *     &lt;property name="generateGetters" value="false"/&gt;
 *     &lt;property name="generateSetters" value="false"/&gt;
 *     &lt;property name="dateTimePattern" value="yyyy-MM-dd HH:mm:ss"/&gt;
 *     &lt;property name="timezone" value="GMT+8"/&gt;
 * &lt;/plugin&gt;
 * </pre>
 * 
 * @author Generated by MyBatis Generator
 * @version 1.0
 * @since 1.0
 */
public class DomainModelPlugin extends PluginAdapter {

    // Configuration property keys
    private static final String GENERATE_GETTERS = "generateGetters";
    private static final String GENERATE_SETTERS = "generateSetters";
    private static final String DATE_TIME_PATTERN = "dateTimePattern";
    private static final String TIMEZONE = "timezone";
    
    // Default values
    private static final String DEFAULT_DATE_TIME_PATTERN = "yyyy-MM-dd HH:mm:ss";
    private static final String DEFAULT_TIMEZONE = "GMT+8";
    
    // Configuration fields
    private boolean generateGetters = true;
    private boolean generateSetters = true;
    private String dateTimePattern = DEFAULT_DATE_TIME_PATTERN;
    private String timezone = DEFAULT_TIMEZONE;

    @Override
    public boolean validate(List<String> warnings) {
        // Parse configuration properties
        parseConfigurationProperties();
        
        // Validate configuration
        if (dateTimePattern == null || dateTimePattern.trim().isEmpty()) {
            warnings.add("DomainModelPlugin: dateTimePattern is empty, using default: " + DEFAULT_DATE_TIME_PATTERN);
            dateTimePattern = DEFAULT_DATE_TIME_PATTERN;
        }
        
        if (timezone == null || timezone.trim().isEmpty()) {
            warnings.add("DomainModelPlugin: timezone is empty, using default: " + DEFAULT_TIMEZONE);
            timezone = DEFAULT_TIMEZONE;
        }
        
        return true;
    }
    
    /**
     * Parses configuration properties from the plugin configuration.
     */
    private void parseConfigurationProperties() {
        if (properties != null) {
            generateGetters = Boolean.parseBoolean(properties.getProperty(GENERATE_GETTERS, "true"));
            generateSetters = Boolean.parseBoolean(properties.getProperty(GENERATE_SETTERS, "true"));
            dateTimePattern = properties.getProperty(DATE_TIME_PATTERN, DEFAULT_DATE_TIME_PATTERN);
            timezone = properties.getProperty(TIMEZONE, DEFAULT_TIMEZONE);
        }
    }

    @Override
    public boolean modelFieldGenerated(Field field, TopLevelClass topLevelClass, 
                                     IntrospectedColumn introspectedColumn, 
                                     IntrospectedTable introspectedTable, 
                                     ModelClassType modelClassType) {
        return super.modelFieldGenerated(field, topLevelClass, introspectedColumn, introspectedTable, modelClassType);
    }

    @Override
    public boolean modelGetterMethodGenerated(Method method, TopLevelClass topLevelClass, 
                                            IntrospectedColumn introspectedColumn, 
                                            IntrospectedTable introspectedTable, 
                                            ModelClassType modelClassType) {
        // Return false to disable getter generation if configured
        return generateGetters;
    }

    @Override
    public boolean modelSetterMethodGenerated(Method method, TopLevelClass topLevelClass, 
                                            IntrospectedColumn introspectedColumn, 
                                            IntrospectedTable introspectedTable, 
                                            ModelClassType modelClassType) {
        // Return false to disable setter generation if configured
        return generateSetters;
    }

}