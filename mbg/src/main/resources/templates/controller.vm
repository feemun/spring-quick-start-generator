package ${ControllerPackage};

import ${ModelName};
#if(${multiConditionQuery})
import ${ModelPoName};
#end
import ${servicePackage};
import ${responseModel};
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.List;
import cloud.catfish.api.CommonPage;
import cloud.catfish.api.CommonPageReq;

/**
 * @description: ${tableRemark}控制层
 */
@Tag(name = "${ModelSimpleName} API", description = "${ModelSimpleName}相关的增删改查操作")
@RestController
@RequestMapping("${apiBaseUrl}")
@Slf4j
public class ${ControllerSimpleName} {

    @Autowired
    private ${ServiceClassName} ${ServiceVariableName};

    @Operation(summary = "分页条件查询")
    @PostMapping("/page")
    public ${SimplResponseModel}<CommonPage<${ModelSimpleName}>> page(@RequestBody CommonPageReq<${ModelSimpleName}> req) {
        List<${ModelSimpleName}> lst = ${ServiceVariableName}.page(req.getCurrentPage(), req.getPageSize());
        return ${SimplResponseModel}.success(CommonPage.restPage(lst));
    }

    @Operation(summary = "根据主键查询")
    @GetMapping("/{id}")
    public ${SimplResponseModel}<${ModelSimpleName}> getById(@PathVariable("id") Long id) {
        return ${SimplResponseModel}.success(${ServiceVariableName}.selectByPrimaryKey(id));
    }

    @Operation(summary = "根据主键更新")
    @PutMapping("/updateById")
    public ${SimplResponseModel}<Boolean> updateByPrimaryKeySelective(@RequestBody ${ModelSimpleName} record) {
        Boolean success = ${ServiceVariableName}.updateByPrimaryKeySelective(record);
        return success ? ${SimplResponseModel}.success(success) : ${SimplResponseModel}.failed();
    }

    @Operation(summary = "根据条件更新")
    @PostMapping("/updateByExample")
    public ${SimplResponseModel}<Integer> updateByExampleSelective(@RequestBody ${ModelSimpleName} record) {
        Integer rowsAffected = ${ServiceVariableName}.updateByExampleSelective(record);
        log.info("Update {} row(s) by condition.", rowsAffected);
        return ${SimplResponseModel}.success(rowsAffected);
    }

    @Operation(summary = "根据主键删除")
    @DeleteMapping("/delete/{id}")
    public ${SimplResponseModel}<Boolean> deleteByPrimaryKey(@PathVariable("id") Long id) {
        Boolean success = ${ServiceVariableName}.deleteByPrimaryKey(id);
        return success ? ${SimplResponseModel}.success(success) : ${SimplResponseModel}.failed();
    }

    @Operation(summary = "根据条件删除")
    @PostMapping("/deleteByExample")
    public ${SimplResponseModel}<Integer> deleteByExample(@RequestBody ${ModelSimpleName} record) {
        Integer rowsAffected = ${ServiceVariableName}.deleteByExample(record);
        log.info("Delete {} row(s) by condition.", rowsAffected);
        return ${SimplResponseModel}.success(rowsAffected);
    }

    @Operation(summary = "新增")
    @PostMapping("/insert")
    public ${SimplResponseModel}<Boolean> insertSelective(@RequestBody ${ModelSimpleName} record) {
        Boolean success = ${ServiceVariableName}.insertSelective(record);
        return success ? ${SimplResponseModel}.success(success) : ${SimplResponseModel}.failed();
    }

    @Operation(summary = "Excel导入")
    @PostMapping("/import")
    public ${SimplResponseModel}<Boolean> importExcel(@RequestBody ${ModelSimpleName} record) {
        Boolean success = ${ServiceVariableName}.insertSelective(record);
        return success ? ${SimplResponseModel}.success(success) : ${SimplResponseModel}.failed();
    }

    @Operation(summary = "导出Excel")
    @PostMapping("/export")
    public ${SimplResponseModel}<Boolean> exportExcel(@RequestBody ${ModelSimpleName} record) {
        Boolean success = ${ServiceVariableName}.insertSelective(record);
        return success ? ${SimplResponseModel}.success(success) : ${SimplResponseModel}.failed();
    }

}
