package ${ServicePackage};

import ${modelPackage}.${ModelSimpleName};
#if(${multiConditionQuery})
import ${ModelPoName};
#end
import ${modelPackage}.param.${ModelSimpleName}RequestParam;
import ${voPackage}.${VoClassName};
import org.springframework.data.domain.Page;

import java.util.List;

/**
 * @description: ${tableRemark}服务层接口
 */
public interface ${ServiceClassName} {

    /**
     * 分页查询后台
     *
     * @param requestParam 查询参数，包含分页信息和查询条件
     * @return 分页查询结果，已转换为VO对象
     */
    Page<${VoClassName}> page(${ModelSimpleName}RequestParam requestParam);

    /**
     * 根据主键查询
     *
     * @param id 主键ID
     * @return 查询结果
     */
    ${ModelSimpleName} selectByPrimaryKey(Long id);

    /**
     * 根据主键查询并转换为VO
     *
#if($hasSinglePrimaryKey)
     * @param ${primaryKeyJavaProperty} 主键
#elseif($hasCompositePrimaryKey)
#foreach($prop in $primaryKeyJavaProperties)
     * @param ${prop} 主键字段${foreach.index}
#end
#else
     * @param id 主键ID
#end
     * @return VO查询结果
     */
#if($hasSinglePrimaryKey)
    ${VoClassName} getById(${primaryKeyMethodParam});
#elseif($hasCompositePrimaryKey)
    ${VoClassName} getById(${primaryKeyMethodParams});
#else
    ${VoClassName} getById(Long id);
#end

    /**
     * 根据主键更新
     *
     * @param record 更新的数据对象
     * @return 是否更新成功
     */
    Boolean updateByPrimaryKeySelective(${ModelSimpleName} record);

    /**
     * 根据条件更新
     *
     * @param record 数据对象，包含更新的数据和条件
     * @return 影响行数
     */
    int updateByExampleSelective(${ModelSimpleName} record);

    /**
     * 根据主键删除
     *
     * @param id 主键ID
     * @return 是否删除成功
     */
    Boolean deleteByPrimaryKey(Long id);

    /**
     * 根据条件删除
     *
     * @param record 删除条件
     * @return 影响行数
     */
    int deleteByExample(${ModelSimpleName} record);

    /**
     * 新增
     *
     * @param record 新增的数据对象
     * @return 是否新增成功
     */
    Boolean insertSelective(${ModelSimpleName} record);
    
    /**
     * 批量新增
     *
     * @param records 批量新增的数据对象列表
     * @return 是否新增成功
     */
    Boolean batchInsert(List<${ModelSimpleName}> records);
    
    /**
     * 批量选择性新增（忽略null值）
     *
     * @param records 批量新增的数据对象列表
     * @return 是否新增成功
     */
    Boolean batchInsertSelective(List<${ModelSimpleName}> records);
    
    /**
     * Excel文件导入处理
     *
     * @param file Excel文件
     * @return 导入结果信息
     * @throws Exception 导入过程中的异常
     */
    String importExcel(org.springframework.web.multipart.MultipartFile file) throws Exception;

}
